variables:
  CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_BUILD_REF_NAME}_${CI_BUILD_REF} 
  CONTAINER_IMAGE_LATEST: ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  KUBECONFIG: /etc/deploy/config

services:
  - docker:dind #Start the docker daemon

stages: #declare the stages to task
  - build-docker-image
  - deploy_to_gcloud
  
build-docker: #builds the docker image for the release
  stage: build-docker-image
  image: docker:latest
  
  script:
    - cd ./hellonode
    - echo "CONTAINER_IMAGE:" $(echo "${CONTAINER_IMAGE}" | tr '[:upper:]' '[:lower:]')
    - LOWERCASE_CONTAINER_IMAGE=$(echo "${CONTAINER_IMAGE}" | tr '[:upper:]' '[:lower:]')
    - LOWERCASE_CONTAINER_IMAGE_LATEST=$(echo "${CONTAINER_IMAGE_LATEST}" | tr '[:upper:]' '[:lower:]')
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build -t ${LOWERCASE_CONTAINER_IMAGE} .
    - docker tag ${LOWERCASE_CONTAINER_IMAGE} ${LOWERCASE_CONTAINER_IMAGE_LATEST}
    - docker push ${LOWERCASE_CONTAINER_IMAGE}
    - docker push ${LOWERCASE_CONTAINER_IMAGE_LATEST}
    
    
deploy:
  stage: deploy_to_gcloud
  image: lwolf/helm-kubectl-docker:v152_213
  before_script:
    - mkdir -p /etc/deploy
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - kubectl config use-context homekube
    - helm init --client-only
    - helm repo add stable https://kubernetes-charts.storage.googleapis.com/
    - helm repo add incubator https://kubernetes-charts-incubator.storage.googleapis.com/
    - helm repo update
  script:
    - cd deploy/libr-files
    - helm dep build
    - export API_VERSION="$(grep "appVersion" Chart.yaml | cut -d" " -f2)"
    - export RELEASE_NAME="libr-files-v${API_VERSION/./-}"
    - export DEPLOYS=$(helm ls | grep $RELEASE_NAME | wc -l)
    - if [ ${DEPLOYS}  -eq 0 ]; then helm install --name=${RELEASE_NAME} . --namespace=${STAGING_NAMESPACE}; else helm upgrade ${RELEASE_NAME} . --namespace=${STAGING_NAMESPACE}; fi
  environment:
    name: staging
    url: https://librerio.example.com
  only:
  - master
