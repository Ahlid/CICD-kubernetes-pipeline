variables:
  CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_BUILD_REF_NAME}_${CI_BUILD_REF} 
  CONTAINER_IMAGE_LATEST: ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  KUBE_NAMESPACE: "default"

services:
  - docker:dind #Start the docker daemon

stages: #declare the stages to task
  - testing
  - build-docker-image
  - deploy_to_gcloud

.test:
  stage: testing
  image: node:boron
  script:
    - npm install
    - npm test

build_image:
  stage: build-docker-image   # build image only after test passed
  image: docker:git # use simply git docker image
  services:
    - docker:dind
  script:
    - LOWERCASE_CONTAINER_IMAGE=$(echo "${CONTAINER_IMAGE}" | tr '[:upper:]' '[:lower:]')
    - LOWERCASE_CONTAINER_IMAGE_LATEST=$(echo "${CONTAINER_IMAGE_LATEST}" | tr '[:upper:]' '[:lower:]')
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build -t ${LOWERCASE_CONTAINER_IMAGE} .
    - docker tag ${LOWERCASE_CONTAINER_IMAGE} ${LOWERCASE_CONTAINER_IMAGE_LATEST}
    - docker push ${LOWERCASE_CONTAINER_IMAGE}
    - docker push ${LOWERCASE_CONTAINER_IMAGE_LATEST}

deploy:
  stage: deploy_to_gcloud
  only: [master]  #build and push images only for master branch commits
  image: google/cloud-sdk:latest
  before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - LOWERCASE_CONTAINER_IMAGE=$(echo "${CONTAINER_IMAGE}" | tr '[:upper:]' '[:lower:]')
    - echo "${KUBE_CERTIFICATE}" > kube_ca.pem
    - kubectl config set-cluster default-cluster --server=${KUBE_URL} --certificate-authority="$(pwd)/kube_ca.pem"
    - kubectl config set-credentials default-admin --token=${KUBE_TOKEN}
    - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace ${KUBE_NAMESPACE}
    - kubectl config use-context default-system
    - kubectl cluster-info
    #- kubectl create secret docker-registry ${KUBE_NAMESPACE} --docker-server=https://registry.gitlab.com/v1/ --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD --docker-email=$GITLAB_USER_EMAIL
    - kubectl create secret -n $KUBE_NAMESPACE docker-registry gitlab-registry \
        --docker-server="$CI_REGISTRY" \
        --docker-username="$CI_REGISTRY_USER" \
        --docker-password="$CI_REGISTRY_PASSWORD" \
        --docker-email="$GITLAB_USER_EMAIL" \
        -o yaml --dry-run | kubectl replace -n $KUBE_NAMESPACE --force -f -
    - kubectl rollout status -n "$KUBE_NAMESPACE" -w "deployment/name"
    - echo "${LOWERCASE_CONTAINER_IMAGE}"
    - sed -i "s#__IMAGETAG__#${LOWERCASE_CONTAINER_IMAGE}#g" node-ws.yml
    - sed -i "s#__IMAGESEC__#${KUBE_NAMESPACE}#g" node-ws.yml
    - kubectl apply -f ./node-ws.yml
  variables:
