variables:
  CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_BUILD_REF_NAME}_${CI_BUILD_REF} 
  CONTAINER_IMAGE_LATEST: ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest

services:
  - docker:dind #Start the docker daemon

stages: #declare the stages to task
  - build-docker-image
  - deploy_to_gcloud
  
.build-docker: #builds the docker image for the release
  stage: build-docker-image
  image: docker:latest
  
  script:
    - cd ./hellonode
    - echo "CONTAINER_IMAGE:" $(echo "${CONTAINER_IMAGE}" | tr '[:upper:]' '[:lower:]')
    - LOWERCASE_CONTAINER_IMAGE=$(echo "${CONTAINER_IMAGE}" | tr '[:upper:]' '[:lower:]')
    - LOWERCASE_CONTAINER_IMAGE_LATEST=$(echo "${CONTAINER_IMAGE_LATEST}" | tr '[:upper:]' '[:lower:]')
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build -t ${LOWERCASE_CONTAINER_IMAGE} .
    - docker tag ${LOWERCASE_CONTAINER_IMAGE} ${LOWERCASE_CONTAINER_IMAGE_LATEST}
    - docker push ${LOWERCASE_CONTAINER_IMAGE}
    - docker push ${LOWERCASE_CONTAINER_IMAGE_LATEST}
    
deploy:
  stage: deploy_to_gcloud
  image: dtzar/helm-kubectl
  script:
    - printenv
    - echo "${KUBE_URL}"
    - echo "${KUBE_TOKEN}"
    - echo "${KUBE_NAMESPACE}"
    - echo "${KUBE_CONFIG}"
    - echo "${KUBE_CONFIG}" > config
    - kubectl config --kubeconfig='config' set-context gcloud-context
    - kubectl get pods
